<script>
	import { onMount } from 'svelte';
  
	// Define the number of sparkles
	let sparkles = 50;
	let sparkleElements = [];
  
	// Arrays to store sparkle data
	let positions = Array.from({ length: sparkles }, () => ({ x: 0, y: 0, vx: 0, vy: 0, opacity: 0 }));
  
	// Mouse coordinates
	let mouseX = 0;
	let mouseY = 0;
  
	// Rainbow colors
	let colors = ['#ff0000', '#ff7f00', '#ffff00', '#7fff00', '#00ff00', '#00ff7f', '#00ffff', '#007fff', '#0000ff', '#7f00ff', '#ff00ff'];
  
	// Track mouse position
	function handleMouseMove(event) {
	  mouseX = event.clientX;
	  mouseY = event.clientY;
	}
  
	// Initialize sparkle elements on mount
	onMount(() => {
	  sparkleElements = Array.from(document.querySelectorAll('.sparkle'));
	  document.addEventListener('mousemove', handleMouseMove);
	  sparkle();
	});
  
	// Generate random colors
	function randomColor() {
	  return colors[Math.floor(Math.random() * colors.length)];
	}
  
	// Animate the sparkles
	function sparkle() {
	  sparkleElements.forEach((element, index) => {
		let sparkle = positions[index];
  
		// If sparkle is inactive, activate it
		if (sparkle.opacity <= 0) {
		  sparkle.x = mouseX;
		  sparkle.y = mouseY;
		  sparkle.vx = Math.random() * 4 - 2;
		  sparkle.vy = Math.random() * 4 - 2;
		  sparkle.opacity = 1;
		  element.style.backgroundColor = randomColor();
		}
  
		// Update sparkle position and fade
		sparkle.x += sparkle.vx;
		sparkle.y += sparkle.vy;
		sparkle.opacity -= 0.02;
  
		// Update element styles
		element.style.transform = `translate(${sparkle.x}px, ${sparkle.y}px)`;
		element.style.opacity = sparkle.opacity;
	  });
  
	  requestAnimationFrame(sparkle);
	}
  </script>
  
  <style>
	.container {
	  position: absolute;
	  top: 0;
	  left: 0;
	  width: 100vw;
	  height: 100vh;
	  pointer-events: none;
	}
  
	.sparkle {
	  position: absolute;
	  width: 5px;
	  height: 5px;
	  border-radius: 50%;
	  background: red;
	  opacity: 0;
	  pointer-events: none;
	}
  </style>
  
  <div class="container">
	{#each Array.from({ length: sparkles }) as _, index}
	  <div class="sparkle"></div>
	{/each}
  </div>
  